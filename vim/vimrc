" 根据不同文件类型导入不同模板
au BufNewFile *.cpp 0r ~/.vim/moudle/sim.cpp
au BufNewFile *.html 0r ~/.vim/moudle/sim.html
au BufNewFile *.php 0r ~/.vim/moudle/sim.php
au BufNewFile *.py 0r ~/.vim/moudle/sim.py
au BufNewFile *.sh 0r ~/.vim/moudle/sim.sh



"=======================
" leader
let mapleader = "`"
let maplocalleader = "-"
"=======================
" need to call funtion case.
autocmd FileType python call Case_py()
autocmd FileType cpp call Case_cpp()
"=======================================================================================================
" my function
" 放一些各语言会用到的模板，分类放
fun! Case_js()

endfun


fun! Case_php()

endfun


fun! Case_cpp()
    nnoremap <localleader>c I//
    set cindent                 " 开启C语言缩进模式
    " 加一些好的功能
    iab # #include <>
    " ===========调用模板区============

    " =================================
endfun


function Case_py()
    nnoremap <localleader>c I#<esc>
    " ===========调用模板区============
    " python的话导入文件可能还会导入新的头文件，头文件和代码分开放
    " 目前的缺点：无法解决光标位置
    inoremap bs    <esc>:r ~/.YUKVIM/py/BS<CR>:0r ~/.YUKVIM/py/im/BS<CR>
    inoremap pysql <esc>:r ~/.YUKVIM/py/SQL<CR>:0r ~/.YUKVIM/py/im/SQL<CR>

    " =================================
endfun

"=======================================================================================================
"sen sei ka ra
syntax enable
syntax on                       " 开启代码高亮
set background=dark             " set bg=dark 
colorscheme murphy              " 设定主题
set cmdheight=2                 " 设定cmd的高度
set number                      " 开启行号
set relativenumber              " 开启相对行号

set tabstop=4                   " 设置 tab的宽度
set expandtab                   " 空格代替tab
set autoindent                  " 自动缩进
set smartindent                 " 智能缩进,能识别{ }
set shiftwidth=4                " 设置格式化时制表符所占用的空格
set softtabstop=4               " 让vim把连续数量的制表看成空格
set copyindent                  " 复制的时候 缩进

set cursorline                  " 高亮当前行
"set cursorcolumn                " 高亮当前列
set ruler                       " 显示光标当前的位置,逗号分隔
set list                        " 显示特殊字符
set listchars=tab:\~\ ,trail:.  " 设定tab用~表示,行尾空白用.

set laststatus=2                " 启动显示状态行(1),总是显示状态行(2) 

if has("autocmd") " 进入文件回到上次编辑的位置
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

"====================================== 行为设定 =====================================
filetype on                     "开启文件类型侦测
set history=1000                "记录的最大cmd历史
set nocompatible                "关闭vi兼容
set backspace=indent,eol,start  "使用 退格键 来删除
set whichwrap=<,>,[,],h,l       " 光标在行尾,行首移动 

set autowrite                   " 文件一有写入,自动保存
set autoread                    " 文件改变时,自动载入
set nobackup                    " 不使用备份文件
set noswapfile                  " 不使用交换文件
set showcmd                     " 显示输入的命令
"set showmatch                   " 在输入括号时光标会短暂地跳到与之相匹配的括号处，不影响输入

set nohls                       " 不高亮搜索
set incsearch                   " 实时搜索
set novisualbell                " 不使用 visualbell
set vb t_vb=

set fileencodings=utf-8         " 设定文件的编码
set fileformat=unix             " 设定文件的格式
"=======================================================================================================
" 我自己的set
let ppp="~/.YUKVIM/"
"=======================================================================================================
"快捷键
inoremap <c-l> <esc>A
inoremap <c-h> <esc>I
inoremap <c-K> <esc>viw~i
"括号自动补全
inoremap ( ()<esc>i
inoremap { {}<esc>i
inoremap [ []<esc>i
inoremap " ""<esc>i
inoremap ' ''<esc>i
vnoremap < <gv
vnoremap > >gv

" 纠正自己容易输入错误的单词
iab incldue include
iab scnaf scanf
iab mian main
iab ture true
iab retrun return
iab tehn then
iab fro for
nnoremap <leader>" viw<esc>a"<esc>hbi"<esc>lel  " 给单词加上双引号
nnoremap <leader>' viw<esc>a'<esc>hbi'<esc>lel  " 给单词加上单引号
nnoremap <leader>< viw<esc>a><esc>hbi<<esc>lel
nnoremap <leader>[ viw<esc>a]<esc>hbi[<esc>lel
nnoremap <leader>{ viw<esc>a}<esc>hbi{<esc>lel

